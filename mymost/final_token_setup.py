#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
"""

import webbrowser
import requests

def final_token_setup():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞"""
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê")
    print("=" * 60)
    
    print("\n‚úÖ –û—Ç–ª–∏—á–Ω–æ! –£ –≤–∞—Å –µ—Å—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    
    print("\nüîÑ –®–ê–ì 1: –°–ú–ï–ù–ê –ê–ö–ö–ê–£–ù–¢–ê")
    print("–°–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç...")
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã—Ö–æ–¥–∞
    logout_url = "https://passport.yandex.ru/passport?mode=logout"
    print(f"\nüö™ –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã—Ö–æ–¥–∞: {logout_url}")
    
    try:
        webbrowser.open(logout_url)
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã—Ö–æ–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∞")
    except:
        print("‚ùå –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    
    print("\nüìù –ù–∞ –æ—Ç–∫—Ä—ã–≤—à–µ–π—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
    print("1. –í—ã–π–¥–∏—Ç–µ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (ustuzhanine)")
    print("2. –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    
    corp_email = input("\nüìß –ö–∞–∫–æ–π email —É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞? (admin@yourcompany.ru): ").strip()
    
    if not corp_email or '@' not in corp_email:
        print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π email!")
        return
    
    print(f"\n‚úÖ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π email: {corp_email}")
    
    input(f"\nüìç –í–æ—à–ª–∏ –ø–æ–¥ {corp_email}? –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    print("\nüîß –®–ê–ì 2: –°–û–ó–î–ê–ù–ò–ï/–ù–ê–°–¢–†–û–ô–ö–ê OAUTH –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    has_app = input("\n–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? (y/n): ").lower().strip()
    
    if has_app == 'n':
        print("\nüÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
        oauth_url = "https://oauth.yandex.ru/"
        
        try:
            webbrowser.open(oauth_url)
            print("‚úÖ OAuth –∫–æ–Ω—Å–æ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞")
        except:
            print(f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: {oauth_url}")
        
        print("\nüìù –í OAuth –∫–æ–Ω—Å–æ–ª–∏:")
        print("1. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'")
        print("2. –ù–∞–∑–≤–∞–Ω–∏–µ: 'Telemost API Corporate'")
        print("3. –û–ø–∏—Å–∞–Ω–∏–µ: 'Corporate API for Telemost'")
        print("4. –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'")
        
        input("\nüìç –°–æ–∑–¥–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    print("\n‚öôÔ∏è –®–ê–ì 3: –ù–ê–°–¢–†–û–ô–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô")
    print("–í OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–π–¥–∏—Ç–µ '–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º' –∏ –¥–æ–±–∞–≤—å—Ç–µ:")
    print("‚úÖ telemost-api:conferences.create")
    print("‚úÖ telemost-api:conferences.read")
    print("‚úÖ telemost-api:conferences.update")
    print("‚úÖ telemost-api:conferences.delete")
    
    input("\nüìç –ù–∞—Å—Ç—Ä–æ–∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è? –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    client_id = input("\nüÜî –í–≤–µ–¥–∏—Ç–µ Client ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ").strip()
    
    if not client_id:
        print("‚ùå Client ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return
    
    print(f"\n‚úÖ Client ID: {client_id}")
    
    print("\nüîë –®–ê–ì 4: –ü–û–õ–£–ß–ï–ù–ò–ï –ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    scopes = [
        "telemost-api:conferences.create",
        "telemost-api:conferences.read",
        "telemost-api:conferences.update",
        "telemost-api:conferences.delete"
    ]
    
    scope_string = "%20".join(scopes)
    token_url = f"https://oauth.yandex.ru/authorize?response_type=token&client_id={client_id}&scope={scope_string}"
    
    print("üåê –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    print(f"\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:")
    print(f"üü¢ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {corp_email}")
    print(f"üî¥ –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å: ustuzhanine –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ª–∏—á–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã")
    
    try:
        webbrowser.open(token_url)
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∞")
    except:
        print("‚ùå –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:")
        print(token_url)
    
    print(f"\nüìù –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print(f"1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω {corp_email}")
    print(f"2. –ï—Å–ª–∏ –ø–æ–∫–∞–∑–∞–Ω –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç - –≤—ã–π–¥–∏—Ç–µ –∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ–¥ {corp_email}")
    print(f"3. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º")
    print(f"4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏–∑ URL –ø–æ—Å–ª–µ #access_token=")
    
    token = input(f"\nüîë –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω: ").strip()
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω!")
        return
    
    print(f"\n‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...{token[-10:]}")
    
    print("\nüß™ –®–ê–ì 5: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    success = test_corporate_token(token, corp_email)
    
    if success:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω
        env_content = f"""# –§–ò–ù–ê–õ–¨–ù–´–ô –†–ê–ë–û–ß–ò–ô –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ô –¢–û–ö–ï–ù
YANDEX_OAUTH_TOKEN={token}
CLIENT_ID={client_id}

# –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
CORPORATE_EMAIL={corp_email}
DOMAIN={corp_email.split('@')[1]}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
LOG_LEVEL=INFO
TOKEN_TYPE=bearer
EXPIRES_IN=31536000

# –°—Ç–∞—Ç—É—Å: –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù –ò –†–ê–ë–û–¢–ê–ï–¢
"""
        
        with open("FINAL_WORKING_TOKEN.env", "w", encoding="utf-8") as f:
            f.write(env_content)
        
        print("\nüíæ –†–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω: FINAL_WORKING_TOKEN.env")
        
        print("\nüöÄ –§–ò–ù–ê–õ–¨–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω:")
        print("   cp FINAL_WORKING_TOKEN.env .env")
        print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
        print("   python examples.py")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é:")
        print("   python examples_advanced.py")
        
        print("\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –í–°–ï –ì–û–¢–û–í–û –ö –†–ê–ë–û–¢–ï!")
        
    else:
        print("\n‚ùå –¢–æ–∫–µ–Ω –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        print("1. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –Ω–µ –æ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
        print("2. –î–æ–º–µ–Ω –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ –Ø–Ω–¥–µ–∫—Å 360")
        print("3. –¢–∞—Ä–∏—Ñ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")
        print("4. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

def test_corporate_token(token, expected_email):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω"""
    
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        response = requests.get(
            'https://login.yandex.ru/info',
            headers={'Authorization': f'OAuth {token}'},
            timeout=10
        )
        
        if response.status_code == 200:
            user_info = response.json()
            login = user_info.get('login', 'N/A')
            email = user_info.get('default_email', 'N/A')
            
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {login}")
            print(f"üìß Email: {email}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
            expected_domain = expected_email.split('@')[1]
            
            if email == expected_email or (email == 'N/A' and expected_domain in expected_email):
                print("‚úÖ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
            else:
                print(f"‚ö†Ô∏è  Email –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç. –û–∂–∏–¥–∞–ª—Å—è: {expected_email}")
                if email.endswith(('@yandex.ru', '@yandex.com')):
                    print("‚ùå –≠—Ç–æ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç!")
                    return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¢–µ–ª–µ–º–æ—Å—Ç
        print("\nüé• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¢–µ–ª–µ–º–æ—Å—Ç...")
        
        response = requests.post(
            'https://cloud-api.yandex.net/v1/telemost-api/conferences',
            headers={
                'Authorization': f'OAuth {token}',
                'Content-Type': 'application/json'
            },
            json={'waiting_room_level': 'PUBLIC'},
            timeout=10
        )
        
        if response.status_code == 201:
            meeting = response.json()
            print("üéâ –£–°–ü–ï–•! API –¢–ï–õ–ï–ú–û–°–¢ –†–ê–ë–û–¢–ê–ï–¢!")
            print(f"üìã –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {meeting['id']}")
            print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É: {meeting['join_url']}")
            
            if 'live_stream' in meeting:
                print(f"üì∫ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é: {meeting['live_stream']['watch_url']}")
            
            return True
            
        else:
            error_data = response.json() if response.content else {}
            error_msg = error_data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            
            print(f"‚ùå –û—à–∏–±–∫–∞ API –¢–µ–ª–µ–º–æ—Å—Ç: {response.status_code}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {error_msg}")
            
            if 'ApiRestrictedToOrganizations' in str(error_data):
                print("\nüí° –ü—Ä–æ–±–ª–µ–º–∞: API –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("1. –¢–æ–∫–µ–Ω –æ—Ç –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–Ω–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ)")
                print("2. –î–æ–º–µ–Ω –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ admin.yandex.ru")
                print("3. –¢–∞—Ä–∏—Ñ –Ø–Ω–¥–µ–∫—Å 360 –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")
            
            return False
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    final_token_setup()
