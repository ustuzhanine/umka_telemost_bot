#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–æ–∫–µ–Ω–∞ –Ø–Ω–¥–µ–∫—Å (–ª–∏—á–Ω—ã–π vs –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π)
"""

import requests
import os
from dotenv import load_dotenv

load_dotenv()

def analyze_token():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø —Ç–æ–∫–µ–Ω–∞"""
    token = os.getenv('YANDEX_OAUTH_TOKEN')
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print("üîç –ê–ù–ê–õ–ò–ó –¢–û–ö–ï–ù–ê –Ø–ù–î–ï–ö–°")
    print("=" * 50)
    print(f"üìã –¢–æ–∫–µ–Ω: {token[:20]}...{token[-10:]}")
    print(f"üìè –î–ª–∏–Ω–∞: {len(token)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    if token.startswith(('y0_AgA', 'y0__x')):
        print("‚úÖ –§–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
    else:
        print("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print("\nüîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:")
    try:
        response = requests.get(
            'https://login.yandex.ru/info',
            headers={'Authorization': f'OAuth {token}'},
            timeout=10
        )
        
        if response.status_code == 200:
            user_info = response.json()
            
            login = user_info.get('login', 'N/A')
            email = user_info.get('default_email', 'N/A')
            client_id = user_info.get('client_id', 'N/A')
            
            print(f"üë§ –õ–æ–≥–∏–Ω: {login}")
            print(f"üìß Email: {email}")
            print(f"üÜî Client ID: {client_id}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
            print("\nüè¢ –ê–ù–ê–õ–ò–ó –¢–ò–ü–ê –ê–ö–ö–ê–£–ù–¢–ê:")
            
            if email.endswith(('@yandex.ru', '@yandex.com', '@gmail.com')):
                print("‚ùå –¢–ò–ü: –õ–ò–ß–ù–´–ô –ê–ö–ö–ê–£–ù–¢")
                print("   ‚Ä¢ –î–æ–º–µ–Ω: –ü—É–±–ª–∏—á–Ω—ã–π (@yandex.ru, @gmail.com)")
                print("   ‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –¢–µ–ª–µ–º–æ—Å—Ç: –ù–ï–¢")
                print("   ‚Ä¢ –ù—É–∂–Ω–æ: –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ø–Ω–¥–µ–∫—Å 360")
            else:
                print("‚úÖ –¢–ò–ü: –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ô –ê–ö–ö–ê–£–ù–¢")
                print(f"   ‚Ä¢ –î–æ–º–µ–Ω: –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π ({email.split('@')[1]})")
                print("   ‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –¢–µ–ª–µ–º–æ—Å—Ç: –í–û–ó–ú–û–ñ–ï–ù")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¢–µ–ª–µ–º–æ—Å—Ç API
    print("\nüé• –¢–ï–°–¢ –î–û–°–¢–£–ü–ê –ö –¢–ï–õ–ï–ú–û–°–¢:")
    try:
        response = requests.post(
            'https://cloud-api.yandex.net/v1/telemost-api/conferences',
            headers={
                'Authorization': f'OAuth {token}',
                'Content-Type': 'application/json'
            },
            json={'waiting_room_level': 'PUBLIC'},
            timeout=10
        )
        
        if response.status_code == 201:
            print("üéâ –£–°–ü–ï–•! –î–æ—Å—Ç—É–ø –∫ –¢–µ–ª–µ–º–æ—Å—Ç API –µ—Å—Ç—å!")
            meeting = response.json()
            print(f"üìã –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞: {meeting['id']}")
        elif response.status_code == 403:
            error_data = response.json() if response.content else {}
            error_msg = error_data.get('message', '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω')
            
            if 'ApiRestrictedToOrganizations' in error_data.get('error', ''):
                print("‚ùå –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù: –ù—É–∂–µ–Ω –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
                print("   ‚Ä¢ –û—à–∏–±–∫–∞: ApiRestrictedToOrganizations")
                print("   ‚Ä¢ –†–µ—à–µ–Ω–∏–µ: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –Ø–Ω–¥–µ–∫—Å 360 –¥–ª—è –±–∏–∑–Ω–µ—Å–∞")
            else:
                print(f"‚ùå –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù: {error_msg}")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")
    
    print("\n" + "=" * 50)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –î–ª—è –¢–µ–ª–µ–º–æ—Å—Ç API –Ω—É–∂–µ–Ω –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ–º–µ–Ω")
    print("2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ https://360.yandex.ru/")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –¥–æ–º–µ–Ω–æ–º")
    print("4. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")

if __name__ == "__main__":
    analyze_token()
