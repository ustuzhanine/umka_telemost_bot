#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ —Å –Ω–æ–≤—ã–º Client ID
"""

import webbrowser
import requests

def get_token_with_client_id():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º Client ID"""
    
    client_id = "e43e6efcf21b4850b558558b7256a852"
    corp_email = "admin@umka.pro"
    
    print("üéØ –ü–û–õ–£–ß–ï–ù–ò–ï –ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê")
    print("=" * 50)
    print(f"üÜî Client ID: {client_id}")
    print(f"üìß –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π email: {corp_email}")
    
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("üü¢ –í—ã –î–û–õ–ñ–ù–´ –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ø–æ–¥ admin@umka.pro")
    print("üî¥ –ù–ï –ø–æ–¥ ustuzhanine –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –ª–∏—á–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç
    check_url = "https://passport.yandex.ru/profile"
    print(f"\nüîç –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: {check_url}")
    
    try:
        webbrowser.open(check_url)
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–∫—Ä—ã—Ç–∞")
    except:
        print("‚ùå –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    print(f"\nüìù –í –ø—Ä–æ—Ñ–∏–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:")
    print(f"‚úÖ –õ–æ–≥–∏–Ω: admin (–∏–ª–∏ –ø–æ—Ö–æ–∂–∏–π)")
    print(f"‚úÖ Email: {corp_email}")
    print(f"‚ùå –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å: ustuzhanine, urionfidel")
    
    account_ok = input(f"\n‚úÖ –í—ã –ø–æ–¥ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º {corp_email}? (y/n): ").lower().strip()
    
    if account_ok != 'y':
        print(f"\nüîÑ –°–ù–ê–ß–ê–õ–ê –í–û–ô–î–ò–¢–ï –ü–û–î {corp_email}!")
        print("1. –í—ã–π–¥–∏—Ç–µ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
        print(f"2. –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ {corp_email}")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ")
        return
    
    print("\nüîß –ù–ê–°–¢–†–û–ô–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô")
    print("–í OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:")
    print("‚úÖ telemost-api:conferences.create")
    print("‚úÖ telemost-api:conferences.read")
    print("‚úÖ telemost-api:conferences.update")
    print("‚úÖ telemost-api:conferences.delete")
    
    permissions_ok = input("\n‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏? (y/n): ").lower().strip()
    
    if permissions_ok != 'y':
        oauth_url = f"https://oauth.yandex.ru/client/{client_id}"
        print(f"\nüîß –û—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {oauth_url}")
        
        try:
            webbrowser.open(oauth_url)
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã")
        except:
            print("‚ùå –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π")
        
        input("\nüìç –î–æ–±–∞–≤–∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è? –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    print("\nüîë –ü–û–õ–£–ß–ï–ù–ò–ï –¢–û–ö–ï–ù–ê")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    scopes = [
        "telemost-api:conferences.create",
        "telemost-api:conferences.read",
        "telemost-api:conferences.update",
        "telemost-api:conferences.delete"
    ]
    
    scope_string = "%20".join(scopes)
    token_url = f"https://oauth.yandex.ru/authorize?response_type=token&client_id={client_id}&scope={scope_string}"
    
    print("üåê –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    print(f"\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:")
    print(f"üü¢ –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: {corp_email}")
    print(f"üî¥ –ï—Å–ª–∏ –ø–æ–∫–∞–∑–∞–Ω –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç - –≤—ã–π–¥–∏—Ç–µ –∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ–¥ {corp_email}")
    
    print(f"\nüîó URL –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print(f"{token_url}")
    
    try:
        webbrowser.open(token_url)
        print("\n‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∞")
    except:
        print("\n‚ùå –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ –≤—Ä—É—á–Ω—É—é")
    
    print(f"\nüìù –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print(f"1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω {corp_email}")
    print(f"2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º")
    print(f"3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏–∑ URL –ø–æ—Å–ª–µ #access_token=")
    print(f"4. –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å y0_AgA –∏–ª–∏ y0__x")
    
    token = input(f"\nüîë –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω: ").strip()
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω!")
        return
    
    if not token.startswith(('y0_AgA', 'y0__x')):
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞")
    
    print(f"\n‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...{token[-10:]}")
    
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–†–ü–û–†–ê–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    success = test_token_comprehensive(token, corp_email, client_id)
    
    if success:
        print("\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ô –¢–û–ö–ï–ù –†–ê–ë–û–¢–ê–ï–¢!")
        print("\nüöÄ –§–ò–ù–ê–õ–¨–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω –≤ .env:")
        print("   cp WORKING_CORPORATE_TOKEN.env .env")
        print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API:")
        print("   python check_token_type.py")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã:")
        print("   python examples.py")
        print("4. –ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è:")
        print("   python examples_advanced.py")
    else:
        print("\n‚ùå –¢–æ–∫–µ–Ω –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –æ—Ç admin@umka.pro")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–æ–º–µ–Ω umka.pro –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ admin.yandex.ru")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞—Ä–∏—Ñ –Ø–Ω–¥–µ–∫—Å 360 –∞–∫—Ç–∏–≤–µ–Ω")

def test_token_comprehensive(token, expected_email, client_id):
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    
    try:
        print("üîç 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        response = requests.get(
            'https://login.yandex.ru/info',
            headers={'Authorization': f'OAuth {token}'},
            timeout=10
        )
        
        if response.status_code == 200:
            user_info = response.json()
            login = user_info.get('login', 'N/A')
            email = user_info.get('default_email', 'N/A')
            
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {login}")
            print(f"üìß Email: {email}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
            if email == expected_email:
                print("‚úÖ Email —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º!")
            elif email == 'N/A':
                print("‚ö†Ô∏è Email –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
            elif email.endswith('@umka.pro'):
                print("‚úÖ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ–º–µ–Ω umka.pro!")
            elif email.endswith(('@yandex.ru', '@yandex.com')):
                print("‚ùå –≠—Ç–æ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ø–Ω–¥–µ–∫—Å–∞!")
                return False
            else:
                print(f"‚úÖ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {email}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            return False
        
        print("\nüé• 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¢–µ–ª–µ–º–æ—Å—Ç...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¢–µ–ª–µ–º–æ—Å—Ç
        response = requests.post(
            'https://cloud-api.yandex.net/v1/telemost-api/conferences',
            headers={
                'Authorization': f'OAuth {token}',
                'Content-Type': 'application/json'
            },
            json={'waiting_room_level': 'PUBLIC'},
            timeout=10
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ API: {response.status_code}")
        
        if response.status_code == 201:
            meeting = response.json()
            print("üéâ –£–°–ü–ï–•! API –¢–ï–õ–ï–ú–û–°–¢ –†–ê–ë–û–¢–ê–ï–¢!")
            print(f"üìã ID —Ç–µ—Å—Ç–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏: {meeting['id']}")
            print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É: {meeting['join_url']}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω
            env_content = f"""# –†–ê–ë–û–ß–ò–ô –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ô –¢–û–ö–ï–ù –Ø–ù–î–ï–ö–° 360
YANDEX_OAUTH_TOKEN={token}

# –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
CLIENT_ID={client_id}

# –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
CORPORATE_EMAIL={expected_email}
CORPORATE_LOGIN={login}
DOMAIN=umka.pro

# –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞
TEST_MEETING_ID={meeting['id']}
TEST_MEETING_URL={meeting['join_url']}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
LOG_LEVEL=INFO
TOKEN_TYPE=bearer
EXPIRES_IN=31536000

# –°–¢–ê–¢–£–°: –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù –ò –†–ê–ë–û–¢–ê–ï–¢ ‚úÖ
# –î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
            
            with open("WORKING_CORPORATE_TOKEN.env", "w", encoding="utf-8") as f:
                f.write(env_content)
            
            print(f"\nüíæ –†–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω: WORKING_CORPORATE_TOKEN.env")
            
            return True
            
        else:
            error_data = response.json() if response.content else {}
            error_msg = error_data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            error_code = error_data.get('error', 'Unknown')
            
            print(f"‚ùå –û—à–∏–±–∫–∞ API –¢–µ–ª–µ–º–æ—Å—Ç: {response.status_code}")
            print(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {error_code}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {error_msg}")
            
            if 'ApiRestrictedToOrganizations' in str(error_data):
                print("\nüí° –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
                print("‚Ä¢ –û—à–∏–±–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç: –Ω—É–∂–µ–Ω –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
                print("‚Ä¢ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("  1. –¢–æ–∫–µ–Ω –≤—Å–µ –µ—â–µ –æ—Ç –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
                print("  2. –î–æ–º–µ–Ω umka.pro –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
                print("  3. –¢–∞—Ä–∏—Ñ –Ø–Ω–¥–µ–∫—Å 360 –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")
                print("  4. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
            
            return False
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    from datetime import datetime
    get_token_with_client_id()
