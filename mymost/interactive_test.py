#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–µ–ª–µ–º–æ—Å—Ç API
"""

from telemost_api import TelemostAPI
import json
from datetime import datetime

def interactive_test():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"""
    
    print("üöÄ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–õ–ï–ú–û–°–¢ API")
    print("=" * 60)
    
    try:
        api = TelemostAPI()
        print("‚úÖ API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        while True:
            print("\nüìã –í–´–ë–ï–†–ò–¢–ï –î–ï–ô–°–¢–í–ò–ï:")
            print("1. üé¨ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é –≤—Å—Ç—Ä–µ—á—É")
            print("2. üì∫ –°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É —Å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–µ–π")
            print("3. üîí –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –≤—Å—Ç—Ä–µ—á—É")
            print("4. ‚ÑπÔ∏è  –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—Ä–µ—á–µ")
            print("5. ‚úèÔ∏è  –û–±–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É")
            print("6. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É")
            print("7. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
            print("8. üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ")
            print("0. ‚ùå –í—ã—Ö–æ–¥")
            
            choice = input("\nüëâ –í–∞—à –≤—ã–±–æ—Ä: ").strip()
            
            if choice == "0":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            elif choice == "1":
                create_simple_meeting(api)
            elif choice == "2":
                create_stream_meeting(api)
            elif choice == "3":
                create_private_meeting(api)
            elif choice == "4":
                get_meeting_info(api)
            elif choice == "5":
                update_meeting(api)
            elif choice == "6":
                delete_meeting(api)
            elif choice == "7":
                show_statistics(api)
            elif choice == "8":
                save_all_data(api)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")

def create_simple_meeting(api):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –≤—Å—Ç—Ä–µ—á–∏"""
    print("\nüé¨ –°–û–ó–î–ê–ù–ò–ï –ü–†–û–°–¢–û–ô –í–°–¢–†–ï–ß–ò")
    print("-" * 40)
    
    try:
        meeting = api.create_simple_meeting()
        
        print(f"‚úÖ –í—Å—Ç—Ä–µ—á–∞ —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üÜî ID: {meeting['id']}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {meeting['join_url']}")
        print(f"üö™ –ö–æ–º–Ω–∞—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è: {meeting.get('waiting_room_level', 'N/A')}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        global last_meeting_id
        last_meeting_id = meeting['id']
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {e}")

def create_stream_meeting(api):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏ —Å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–µ–π"""
    print("\nüì∫ –°–û–ó–î–ê–ù–ò–ï –í–°–¢–†–ï–ß–ò –° –¢–†–ê–ù–°–õ–Ø–¶–ò–ï–ô")
    print("-" * 40)
    
    title = input("üìù –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ (–∏–ª–∏ Enter –¥–ª—è –∞–≤—Ç–æ): ").strip()
    if not title:
        title = f"–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è {datetime.now().strftime('%Y-%m-%d %H:%M')}"
    
    description = input("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
    
    try:
        meeting = api.create_meeting_with_stream(
            stream_title=title,
            stream_description=description or None
        )
        
        print(f"‚úÖ –í—Å—Ç—Ä–µ—á–∞ —Å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–µ–π —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üÜî ID: {meeting['id']}")
        print(f"üîó –°—Å—ã–ª–∫–∞ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {meeting['join_url']}")
        
        if 'live_stream' in meeting:
            print(f"üëÄ –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {meeting['live_stream']['view_url']}")
            print(f"üì∫ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏: {meeting['live_stream']['title']}")
        
        global last_meeting_id
        last_meeting_id = meeting['id']
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {e}")

def create_private_meeting(api):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏"""
    print("\nüîí –°–û–ó–î–ê–ù–ò–ï –ü–†–ò–í–ê–¢–ù–û–ô –í–°–¢–†–ï–ß–ò")
    print("-" * 40)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:")
    print("1. ADMINS - —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã")
    print("2. ORGANIZATION - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
    
    choice = input("üëâ –í–∞—à –≤—ã–±–æ—Ä: ").strip()
    
    level_map = {
        "1": "ADMINS",
        "2": "ORGANIZATION"
    }
    
    level = level_map.get(choice, "ADMINS")
    
    try:
        meeting = api.create_meeting(waiting_room_level=level)
        
        print(f"‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üÜî ID: {meeting['id']}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {meeting['join_url']}")
        print(f"üîí –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {level}")
        
        global last_meeting_id
        last_meeting_id = meeting['id']
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {e}")

def get_meeting_info(api):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å—Ç—Ä–µ—á–µ"""
    print("\n ‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–°–¢–†–ï–ß–ï")
    print("-" * 40)
    
    meeting_id = input("üÜî ID –≤—Å—Ç—Ä–µ—á–∏ (–∏–ª–∏ Enter –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π): ").strip()
    
    if not meeting_id:
        try:
            meeting_id = last_meeting_id
            print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤—Å—Ç—Ä–µ—á—É: {meeting_id}")
        except NameError:
            print("‚ùå –ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—Å—Ç—Ä–µ—á–∏. –£–∫–∞–∂–∏—Ç–µ ID.")
            return
    
    try:
        info = api.get_meeting_info(meeting_id)
        
        print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞:")
        print(f"üÜî ID: {info['id']}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {info['join_url']}")
        print(f"üö™ –ö–æ–º–Ω–∞—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è: {info.get('waiting_room_level', 'N/A')}")
        
        if 'live_stream' in info:
            print(f"üì∫ –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è: {info['live_stream']['title']}")
            print(f"üëÄ –°—Å—ã–ª–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {info['live_stream']['view_url']}")
        
        if 'cohosts' in info:
            print(f"üë• –°–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤: {len(info['cohosts'])}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")

def update_meeting(api):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏"""
    print("\n‚úèÔ∏è –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–°–¢–†–ï–ß–ò")
    print("-" * 40)
    
    meeting_id = input("üÜî ID –≤—Å—Ç—Ä–µ—á–∏ (–∏–ª–∏ Enter –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π): ").strip()
    
    if not meeting_id:
        try:
            meeting_id = last_meeting_id
            print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤—Å—Ç—Ä–µ—á—É: {meeting_id}")
        except NameError:
            print("‚ùå –ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—Å—Ç—Ä–µ—á–∏. –£–∫–∞–∂–∏—Ç–µ ID.")
            return
    
    print("\n–ß—Ç–æ –æ–±–Ω–æ–≤–∏—Ç—å?")
    print("1. –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞")
    print("2. –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏")
    
    choice = input("üëâ –í–∞—à –≤—ã–±–æ—Ä: ").strip()
    
    try:
        if choice == "1":
            print("–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:")
            print("1. PUBLIC - –æ—Ç–∫—Ä—ã—Ç–∞—è")
            print("2. ADMINS - —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã")
            print("3. ORGANIZATION - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
            
            level_choice = input("üëâ –í—ã–±–æ—Ä: ").strip()
            level_map = {"1": "PUBLIC", "2": "ADMINS", "3": "ORGANIZATION"}
            new_level = level_map.get(level_choice, "PUBLIC")
            
            result = api.update_meeting(meeting_id, waiting_room_level=new_level)
            print(f"‚úÖ –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {new_level}")
            
        elif choice == "2":
            new_title = input("üìù –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏: ").strip()
            if new_title:
                result = api.update_meeting(meeting_id, live_stream={'title': new_title})
                print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {new_title}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")

def delete_meeting(api):
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏"""
    print("\nüóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –í–°–¢–†–ï–ß–ò")
    print("-" * 40)
    
    meeting_id = input("üÜî ID –≤—Å—Ç—Ä–µ—á–∏ (–∏–ª–∏ Enter –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π): ").strip()
    
    if not meeting_id:
        try:
            meeting_id = last_meeting_id
            print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤—Å—Ç—Ä–µ—á—É: {meeting_id}")
        except NameError:
            print("‚ùå –ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—Å—Ç—Ä–µ—á–∏. –£–∫–∞–∂–∏—Ç–µ ID.")
            return
    
    confirm = input(f"‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É {meeting_id}? (yes/no): ").strip().lower()
    
    if confirm in ['yes', 'y', '–¥–∞']:
        try:
            api.delete_meeting(meeting_id)
            print("‚úÖ –í—Å—Ç—Ä–µ—á–∞ —É–¥–∞–ª–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
    else:
        print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

def show_statistics(api):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á"""
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("-" * 40)
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –≤—Å—Ç—Ä–µ—á
    import glob
    meeting_files = glob.glob("meeting_*.json")
    
    print(f"üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á: {len(meeting_files)}")
    
    if meeting_files:
        print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:")
        for file in sorted(meeting_files)[-5:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
            try:
                with open(file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                print(f"  üÜî {data['id']} - {file}")
            except:
                print(f"  ‚ùå {file} (–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è)")

def save_all_data(api):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"""
    print("\nüíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–Ω—ã–π —Ñ–∞–π–ª
        import glob
        meeting_files = glob.glob("meeting_*.json")
        
        summary = {
            "timestamp": datetime.now().isoformat(),
            "total_meetings": len(meeting_files),
            "meetings": []
        }
        
        for file in meeting_files:
            try:
                with open(file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                summary["meetings"].append({
                    "id": data['id'],
                    "join_url": data['join_url'],
                    "file": file
                })
            except:
                pass
        
        summary_file = f"telemost_summary_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(summary_file, 'w', encoding='utf-8') as f:
            json.dump(summary, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –°–≤–æ–¥–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {summary_file}")
        print(f"üìä –í—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á: {len(meeting_files)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—Å—Ç—Ä–µ—á–∏
last_meeting_id = None

if __name__ == "__main__":
    interactive_test()
