#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º .env
"""

import requests
import json
from datetime import datetime

def test_token(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω"""
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω")
        return False
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω: {token[:20]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    info_url = "https://login.yandex.ru/info"
    headers = {'Authorization': f'OAuth {token}'}
    
    try:
        response = requests.get(info_url, headers=headers, timeout=10)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            return False
        
        user_info = response.json()
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è OK. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('login', 'N/A')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏
    api_url = "https://cloud-api.yandex.net/v1/telemost-api/conferences"
    api_headers = {
        'Authorization': f'OAuth {token}',
        'Content-Type': 'application/json'
    }
    
    data = {"waiting_room_level": "PUBLIC"}
    
    try:
        print("üöÄ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤—Å—Ç—Ä–µ—á—É...")
        response = requests.post(api_url, headers=api_headers, json=data, timeout=30)
        
        if response.status_code == 201:
            meeting = response.json()
            print("‚úÖ –í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"üìã ID: {meeting['id']}")
            print(f"üîó –°—Å—ã–ª–∫–∞: {meeting['join_url']}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"test_meeting_{timestamp}.json"
            
            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(meeting, f, ensure_ascii=False, indent=2)
            
            print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {filename}")
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏: {response.status_code}")
            try:
                error = response.json()
                print(f"–î–µ—Ç–∞–ª–∏: {error}")
            except:
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("–í—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    new_token = input().strip()
    
    if not new_token:
        print("–í—ã—Ö–æ–¥...")
        exit()
    
    if test_token(new_token):
        print("\n" + "=" * 50)
        print("‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env:")
        print(f"YANDEX_OAUTH_TOKEN={new_token}")
    else:
        print("\n" + "=" * 50)
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π.")
